{"ast":null,"code":"import{heroData}from\"../mockData/heroData\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";export var Header=function Header(_ref){var header=_ref.header;return/*#__PURE__*/_jsx(\"h1\",{className:\"left__header\",children:header});};export var Description=function Description(_ref2){var description=_ref2.description;return/*#__PURE__*/_jsx(\"p\",{className:\"left__description\",children:description});};export var Button=function Button(_ref3){var _ref3$ctaButton=_ref3.ctaButton,type=_ref3$ctaButton.type,title=_ref3$ctaButton.title;switch(type){case\"input\":return/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:title});case\"button\":return/*#__PURE__*/_jsx(\"button\",{className:\"cta_buttons__signin btn primary-btn\",children:title});default:return null;}};export var Buttons=function Buttons(_ref4){var ctaButtons=_ref4.ctaButtons;return/*#__PURE__*/_jsx(\"div\",{className:\"left__cta_buttons\",children:ctaButtons.map(function(ctaButton,index){return/*#__PURE__*/_jsx(Button,{ctaButton:ctaButton},index);})});};export var Illustration=function Illustration(_ref5){var _ref5$illustration=_ref5.illustration,alt=_ref5$illustration.alt,src=_ref5$illustration.src;return/*#__PURE__*/_jsx(\"img\",{src:src,alt:alt});};var Hero=function Hero(){var header=heroData.header,description=heroData.description,illustration=heroData.illustration,heroCtaButtons=heroData.heroCtaButtons;return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"hero_section__left\",children:[/*#__PURE__*/_jsx(Header,{header:header}),/*#__PURE__*/_jsx(Description,{description:description}),/*#__PURE__*/_jsx(Buttons,{ctaButtons:heroCtaButtons})]}),/*#__PURE__*/_jsx(\"div\",{className:\"hero_section__right\",children:/*#__PURE__*/_jsx(Illustration,{illustration:illustration})})]});};export default Hero;","map":{"version":3,"names":["heroData","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","Header","_ref","header","className","children","Description","_ref2","description","Button","_ref3","_ref3$ctaButton","ctaButton","type","title","placeholder","Buttons","_ref4","ctaButtons","map","index","Illustration","_ref5","_ref5$illustration","illustration","alt","src","Hero","heroCtaButtons"],"sources":["C:/Users/Никита/OneDrive/Documents/3 курс/Веб-программирование/web-prog/web-programming/lab4/src/components/Hero.jsx"],"sourcesContent":["import { heroData } from \"../mockData/heroData\";\r\n\r\nexport const Header = ({ header }) => (\r\n  <h1 className=\"left__header\">{header}</h1>\r\n);\r\n\r\nexport const Description = ({ description }) => (\r\n  <p className=\"left__description\">{description}</p>\r\n);\r\n\r\nexport const Button = ({ ctaButton: { type, title } }) => {\r\n  switch (type) {\r\n    case \"input\":\r\n      return <input type=\"text\" placeholder={title} />;\r\n\r\n    case \"button\":\r\n      return (\r\n        <button className=\"cta_buttons__signin btn primary-btn\">{title}</button>\r\n      );\r\n\r\n    default:\r\n      return null;\r\n  }\r\n};\r\n\r\nexport const Buttons = ({ ctaButtons }) => {\r\n  return (\r\n    <div className=\"left__cta_buttons\">\r\n      {ctaButtons.map((ctaButton, index) => (\r\n        <Button key={index} ctaButton={ctaButton} />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const Illustration = ({ illustration: { alt, src } }) => (\r\n  <img src={src} alt={alt} />\r\n);\r\n\r\nconst Hero = () => {\r\n  const { header, description, illustration, heroCtaButtons } = heroData;\r\n\r\n  return (\r\n    <>\r\n      <div className=\"hero_section__left\">\r\n        <Header header={header} />\r\n        <Description description={description} />\r\n        <Buttons ctaButtons={heroCtaButtons} />\r\n      </div>\r\n      <div className=\"hero_section__right\">\r\n        <Illustration illustration={illustration} />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Hero;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}